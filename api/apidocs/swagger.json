{
    "swagger": "2.0",
    "info": {
        "description": "Proyecto realizado en codigo",
        "version": "1.0.0",
        "title": "Reserva de Aulas",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "r.gonxalezch@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "probando-01-aqp.heroku.com",
    "basePath": "/v2",
    "tags": [
        {
            "name": "pabellon",
            "description": "Todo relacionado acerca de los Pabellones para la reserva de aulas"
        },
        {
            "name": "store",
            "description": "Access to Petstore orders"
        },
        {
            "name": "user",
            "description": "Operations about user",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            }
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/pabellon": {
            "get": {
                "tags": [
                    "pabellon"
                ],
                "summary": "Traer todos los pabellones de nuestra base de Datos",
                "description": "Hacemos una consulta a nuestra base de datos para que nos devuelva todos los pabellones generados",
                "operationId": "getAllPabellon",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Todos los Pabellones",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pabellon"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "pabellon"
                ],
                "summary": "Ingresar Pabellon",
                "description": "Mandamos un pabellon por el body y este se agrega a nuestra tabla en nuestra base de datos",
                "operationId": "addPabellon",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "El objeto Pabellon que va a ser ingresado en la base de Datos",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Pabellon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "El Pabellon fue creado con exito"
                    },
                    "400": {
                        "description": "Hubo un error al crear el pabellon"
                    }
                }
            }
        },
        "/pabellon/{id}": {
            "get": {
                "tags": [
                    "pabellon"
                ],
                "summary": "traer un pabellon segun su id",
                "description": "Hacemos una consulta a nuestra base de datos para que nos devuelva el pabellon",
                "operationId": "getPabellonById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id del pabellon para ser buscado",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pabellon",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pabellon"
                            }
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "Pabellon": {
            "type": "object",
            "properties": {
                "pab_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "pab_desc": {
                    "type": "string"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "shipDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ]
                },
                "complete": {
                    "type": "boolean",
                    "default": false
                }
            },
            "xml": {
                "name": "Order"
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Category"
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Tag"
            }
        },
        "Pet": {
            "type": "object",
            "required": [
                "name",
                "photoUrls"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "name": {
                    "type": "string",
                    "example": "doggie"
                },
                "photoUrls": {
                    "type": "array",
                    "xml": {
                        "name": "photoUrl",
                        "wrapped": true
                    },
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "xml": {
                        "name": "tag",
                        "wrapped": true
                    },
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "pet status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ]
                }
            },
            "xml": {
                "name": "Pet"
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}
